{"mappings":"ACGA,MAAM,EAAkB,SAAS,aAAa,CAAC,YA0I/C,AAhIA,iBACE,GAAI,CAEA,IAAM,EAAO,MAAM,MAAM,6EAGnB,EAAO,MAAM,EAAK,IAAI,GAG5B,QAAQ,GAAG,CAAC,yBAA0B,GACtC,QAAQ,GAAG,CAAC,mCAAoC,GAGhD,IAAI,EAAS,EAAK,IAAI,CAAC,MAAM,CAE7B,EAAS,CACP,GAAI,EAAO,EAAE,CACb,MAAO,EAAO,KAAK,CACnB,UAAW,EAAO,SAAS,CAC3B,UAAW,EAAO,UAAU,CAC5B,MAAO,EAAO,SAAS,CACvB,SAAU,EAAO,QAAQ,CACzB,SAAU,EAAO,YAAY,CAC7B,YAAa,EAAO,WAAW,AAC/B,EAEF,QAAQ,GAAG,CAAC,mBAAoB,GAChC,QAAQ,GAAG,CAAC,EAAO,KAAK,CAAE,EAAO,KAAK,CAAE,EAAO,SAAS,EAE5D,IAAM,EAAO,CAAC;AACA,gBAAA,EAAE,EAAO,KAAK,CAAC;A;AAEjB,cAAA,EAAE,EAAO,KAAK,CAAC;A;A;A;A;A;A;A;A;AASsC,mEAAA,EAAE,EAAO,QAAQ,CAAC;A;A;A;A;A;A;AAOnB,kEAAA,EAAE,EAAO,QAAQ,CAAC;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;AAgC5E,QAAA,EAAE,EAAO,WAAW,CACjB,GAAG,CAAC,AAAA,GACI;A;A;A;A;AAKyB,4CAAA,EAAE,EAAI,QAAQ,EAAI,GAAG;A;AAEtB,2CAAA,EAAE,EAAI,IAAI,EAAI,GAAG;AAC5C,gBAAA,EAAE,EAAI,WAAW;A;A;AAGrB,YAAA,CAAC,EAEF,IAAI,CAAC;A;A;A;A;A;A;A;AAQwB,wCAAA,EAAE,EAAO,SAAS,CAAC;A;A;A;A;AAK7C,cAAA,EAAE,EAAO,SAAS,CAAC;A;A;A;A;A;A;A;A;AAS3B,MAAA,CAAC,AACH,CAAA,EAAgB,SAAS,CAAC,GAC1B,EAAgB,kBAAkB,CAAC,aAAa,EAElD,CAAE,MAAO,EAAO,CAEZ,MAAM,UAAY,EAAM,OAAO,CACnC,CACF","sources":["<anon>","src/js/controller.js"],"sourcesContent":["\n\nconst $f50bd1f2915ed0f2$var$recipeContainer = document.querySelector('.recipe');\nconst $f50bd1f2915ed0f2$var$timeout = function(s) {\n    return new Promise(function(_, reject) {\n        setTimeout(function() {\n            reject(new Error(`Request took too long! Timeout after ${s} second`));\n        }, s * 1000);\n    });\n};\nasync function $f50bd1f2915ed0f2$var$showRecipe() {\n    try {\n        const resp = await fetch(\"https://forkify-api.herokuapp.com/api/v2/recipes/5ed6604591c37cdc054bc886\");\n        const data = await resp.json();\n        console.log(\"Respuesta HTTP (resp):\", resp);\n        console.log(\"Datos convertidos a JSON (data):\", data);\n        let recipe = data.data.recipe;\n        recipe = {\n            id: recipe.id,\n            title: recipe.title,\n            publisher: recipe.publisher,\n            sourceUrl: recipe.source_url,\n            image: recipe.image_url,\n            servings: recipe.servings,\n            cookTime: recipe.cooking_time,\n            ingredients: recipe.ingredients\n        };\n        console.log(\"Receta extra\\xedda:\", recipe);\n        console.log(recipe.image, recipe.title, recipe.publisher);\n        const markup = ` <figure class=\"recipe__fig\">\n      <img src=\"${recipe.image}\" alt=\"Tomato\" class=\"recipe__img\" />\n      <h1 class=\"recipe__title\">\n        <span>${recipe.title}</span>\n      </h1>\n      </figure>\n\n      <div class=\"recipe__details\">\n      <div class=\"recipe__info\">\n        <svg class=\"recipe__info-icon\">\n          <use href=\"src/img/icons.svg#icon-clock\"></use>\n        </svg>\n        <span class=\"recipe__info-data recipe__info-data--minutes\">${recipe.cookTime}</span>\n        <span class=\"recipe__info-text\">minutes</span>\n      </div>\n      <div class=\"recipe__info\">\n        <svg class=\"recipe__info-icon\">\n          <use href=\"src/img/icons.svg#icon-users\"></use>\n        </svg>\n        <span class=\"recipe__info-data recipe__info-data--people\">${recipe.servings}</span>\n        <span class=\"recipe__info-text\">servings</span>\n\n        <div class=\"recipe__info-buttons\">\n          <button class=\"btn--tiny btn--increase-servings\">\n            <svg>\n              <use href=\"src/img/icons.svg#icon-minus-circle\"></use>\n            </svg>\n          </button>\n          <button class=\"btn--tiny btn--increase-servings\">\n            <svg>\n              <use href=\"src/img/icons.svg#icon-plus-circle\"></use>\n            </svg>\n          </button>\n        </div>\n      </div>\n\n      <div class=\"recipe__user-generated\">\n        <svg>\n          <use href=\"src/img/icons.svg#icon-user\"></use>\n        </svg>\n      </div>\n      <button class=\"btn--round\">\n        <svg class=\"\">\n          <use href=\"src/img/icons.svg#icon-bookmark-fill\"></use>\n        </svg>\n      </button>\n      </div>\n\n      <div class=\"recipe__ingredients\">\n      <h2 class=\"heading--2\">Recipe ingredients</h2>\n      <ul class=\"recipe__ingredient-list\">\n        ${recipe.ingredients.map((ing)=>{\n            return `\n            <li class=\"recipe__ingredient\">\n              <svg class=\"recipe__icon\">\n                <use href=\"src/img/icons.svg#icon-check\"></use>\n              </svg>\n              <div class=\"recipe__quantity\">${ing.quantity ?? ''}</div>\n              <div class=\"recipe__description\">\n                <span class=\"recipe__unit\">${ing.unit ?? ''}</span>\n                ${ing.description}\n              </div>\n            </li>\n            `;\n        }).join('')}\n      </ul>\n      </div>\n\n      <div class=\"recipe__directions\">\n      <h2 class=\"heading--2\">How to cook it</h2>\n      <p class=\"recipe__directions-text\">\n        This recipe was carefully designed and tested by\n        <span class=\"recipe__publisher\">${recipe.publisher}</span>. Please check out\n        directions at their website.\n      </p>\n      <a\n        class=\"btn--small recipe__btn\"\n        href=\"${recipe.sourceUrl}\"\n        target=\"_blank\"\n      >\n        <span>Directions</span>\n        <svg class=\"search__icon\">\n          <use href=\"src/img/icons.svg#icon-arrow-right\"></use>\n        </svg>\n      </a>\n      </div>\n      `;\n        $f50bd1f2915ed0f2$var$recipeContainer.innerHTML = \"\";\n        $f50bd1f2915ed0f2$var$recipeContainer.insertAdjacentHTML('afterbegin', markup);\n    } catch (error) {\n        alert(\"Error: \" + error.message);\n    }\n}\n// e. Invocar la función\n$f50bd1f2915ed0f2$var$showRecipe(); // https://forkify-api.herokuapp.com/v2\n ///////////////////////////////////////\n\n\n//# sourceMappingURL=Forkify.2b1ad80e.js.map\n","import '../sass/main.scss';\nimport '../img/icons.svg'\n\nconst recipeContainer = document.querySelector('.recipe');\n \nconst timeout = function (s) {\n  return new Promise(function (_, reject) {\n    setTimeout(function () {\n      reject(new Error(`Request took too long! Timeout after ${s} second`));\n    }, s * 1000);\n  });\n};\n\nasync function showRecipe() {\n  try {\n     \n      const resp = await fetch(\"https://forkify-api.herokuapp.com/api/v2/recipes/5ed6604591c37cdc054bc886\");\n\n      \n      const data = await resp.json();\n\n     \n      console.log(\"Respuesta HTTP (resp):\", resp);\n      console.log(\"Datos convertidos a JSON (data):\", data);\n\n      \n      let recipe = data.data.recipe;\n\n      recipe = {\n        id: recipe.id,\n        title: recipe.title,\n        publisher: recipe.publisher,\n        sourceUrl: recipe.source_url,\n        image: recipe.image_url,\n        servings: recipe.servings,\n        cookTime: recipe.cooking_time,\n        ingredients: recipe.ingredients,\n        }\n\n      console.log(\"Receta extraída:\", recipe);\n      console.log(recipe.image, recipe.title, recipe.publisher)\n      \n  const markup=` <figure class=\"recipe__fig\">\n      <img src=\"${recipe.image}\" alt=\"Tomato\" class=\"recipe__img\" />\n      <h1 class=\"recipe__title\">\n        <span>${recipe.title}</span>\n      </h1>\n      </figure>\n\n      <div class=\"recipe__details\">\n      <div class=\"recipe__info\">\n        <svg class=\"recipe__info-icon\">\n          <use href=\"src/img/icons.svg#icon-clock\"></use>\n        </svg>\n        <span class=\"recipe__info-data recipe__info-data--minutes\">${recipe.cookTime}</span>\n        <span class=\"recipe__info-text\">minutes</span>\n      </div>\n      <div class=\"recipe__info\">\n        <svg class=\"recipe__info-icon\">\n          <use href=\"src/img/icons.svg#icon-users\"></use>\n        </svg>\n        <span class=\"recipe__info-data recipe__info-data--people\">${recipe.servings}</span>\n        <span class=\"recipe__info-text\">servings</span>\n\n        <div class=\"recipe__info-buttons\">\n          <button class=\"btn--tiny btn--increase-servings\">\n            <svg>\n              <use href=\"src/img/icons.svg#icon-minus-circle\"></use>\n            </svg>\n          </button>\n          <button class=\"btn--tiny btn--increase-servings\">\n            <svg>\n              <use href=\"src/img/icons.svg#icon-plus-circle\"></use>\n            </svg>\n          </button>\n        </div>\n      </div>\n\n      <div class=\"recipe__user-generated\">\n        <svg>\n          <use href=\"src/img/icons.svg#icon-user\"></use>\n        </svg>\n      </div>\n      <button class=\"btn--round\">\n        <svg class=\"\">\n          <use href=\"src/img/icons.svg#icon-bookmark-fill\"></use>\n        </svg>\n      </button>\n      </div>\n\n      <div class=\"recipe__ingredients\">\n      <h2 class=\"heading--2\">Recipe ingredients</h2>\n      <ul class=\"recipe__ingredient-list\">\n        ${recipe.ingredients\n          .map(ing => {\n            return `\n            <li class=\"recipe__ingredient\">\n              <svg class=\"recipe__icon\">\n                <use href=\"src/img/icons.svg#icon-check\"></use>\n              </svg>\n              <div class=\"recipe__quantity\">${ing.quantity ?? ''}</div>\n              <div class=\"recipe__description\">\n                <span class=\"recipe__unit\">${ing.unit ?? ''}</span>\n                ${ing.description}\n              </div>\n            </li>\n            `;\n          })\n          .join('')}\n      </ul>\n      </div>\n\n      <div class=\"recipe__directions\">\n      <h2 class=\"heading--2\">How to cook it</h2>\n      <p class=\"recipe__directions-text\">\n        This recipe was carefully designed and tested by\n        <span class=\"recipe__publisher\">${recipe.publisher}</span>. Please check out\n        directions at their website.\n      </p>\n      <a\n        class=\"btn--small recipe__btn\"\n        href=\"${recipe.sourceUrl}\"\n        target=\"_blank\"\n      >\n        <span>Directions</span>\n        <svg class=\"search__icon\">\n          <use href=\"src/img/icons.svg#icon-arrow-right\"></use>\n        </svg>\n      </a>\n      </div>\n      `\n    recipeContainer.innerHTML=\"\";\n    recipeContainer.insertAdjacentHTML('afterbegin',markup);\n\n  } catch (error) {\n     \n      alert(\"Error: \" + error.message);\n  }\n}\n\n// e. Invocar la función\nshowRecipe();\n\n\n// https://forkify-api.herokuapp.com/v2\n\n///////////////////////////////////////\n"],"names":["$f50bd1f2915ed0f2$var$recipeContainer","document","querySelector","$f50bd1f2915ed0f2$var$showRecipe","resp","fetch","data","json","console","log","recipe","id","title","publisher","sourceUrl","source_url","image","image_url","servings","cookTime","cooking_time","ingredients","markup","map","ing","quantity","unit","description","join","innerHTML","insertAdjacentHTML","error","alert","message"],"version":3,"file":"Forkify.2b1ad80e.js.map"}